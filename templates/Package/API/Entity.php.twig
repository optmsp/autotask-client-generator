<?php

namespace Anteris\Autotask\API\{{ entityName.plural }};

{%~ for import in imports|sort %}
use {{ import }};
{%~ endfor %}

/**
 * Represents {{ entityName.singular }} entities.
 */
class {{ entityName.singular }}Entity extends DataTransferObject
{
{% for field in fields %}
    public {% if (field.isRequired != true and field.dataType != 'null') or (field.name == 'paymentTerms') or (field.name == 'quantityNowReceiving') -%}?{%- endif -%}{%- if field.dataType != 'null' %}{{- field.dataType }} {% endif %}${{ field.name -}};
{%~ endfor %}
    /** @var \Anteris\Autotask\Support\UserDefinedFields\UserDefinedFieldEntity[]|null */
    public ?array $userDefinedFields;

    /**
     * Creates a new {{ entityName.singular }} entity.
     * If this entity has dates, they will be cast as Carbon objects.
     *
     * @author Aidan Casey <aidan.casey@anteris.com>
     */
    public function __construct(array $array)
    {
{%- for field in fields -%}
    {%~ if field.dataType == 'Carbon' ~%}
        if (isset($array['{{- field.name -}}'])) {
            $array['{{- field.name -}}'] = new Carbon($array['{{- field.name -}}']);
        }
    {%~ else -%}
    {% endif -%}
{% endfor ~%}
        parent::__construct($array);
    }

    /**
     * Creates an instance of this class from an Http response.
     *
     * @param  Response  $response  Http response.
     *
     * @author Aidan Casey <aidan.casey@anteris.com>
     */
    public static function fromResponse(Response $response)
    {
        $responseArray = json_decode($response->getBody(), true);

        if (isset($responseArray['item']) === false) {
            throw new \Exception('Missing item key in response.');
        }

        return new self($responseArray['item']);
    }
}
